from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, ContentType, ParseMode
from main import FSM, bot
import asyncio
import threading
from keyboards.inline.start_keyboard import *
from keyboards.inline.check_subscribe import *
from handlers.user_handlers import *
from functions.private_functions.check_subscribe import check_sub


async def start(message: Message, state: FSM):
      is_syb = await check_sub(user_id=message.from_user.id)
      if is_syb is True:
       markup = await Start_keyboard(user_id=message.from_user.id)
       msg = f"üëã*–ü—Ä–∏–≤–µ—Ç!\n–≠—Ç–æ –±–æ—Ç, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ –≤ CHATGpt*\n\n–û__–±—è–∑–∞–∞—Ç–µ–ª—å–Ω–æ –ø–æ—á–∏—Ç–∞–π –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ, –ø–æ–≤–µ—Ä—å, –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ!__\n\n–ë–æ—Ç —Ä–∞–±–æ—Ç—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –≤—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ –∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç, –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –¥–∞–ª—å—à–µ!\n\n–ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ - @Sofreake"
      else:
       markup = await checksubscribe()
       msg = '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–±–æ—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª'
      await bot.send_message(message.chat.id, text=msg, reply_markup=markup, parse_mode='Markdown')


@dp.message_handler(state=FSM.rassil)
async def send_message_to_all(message: Message, state: FSM):
  await state.finish()
  with open('users.txt', 'r') as file:
     for line in file:
        try:
         await bot.send_message(chat_id=line, text=message.text)
        except:
            continue


