from aiogram.types import CallbackQuery, ParseMode
from main import dp, bot
from functions.user_functions.process_answer_function import *
from main import FSM
from keyboards.inline.start_keyboard import *
from keyboards.inline.check_subscribe import *
from handlers.user_handlers import *
from functions.private_functions.check_subscribe import check_sub
from aiogram.types import Message


@dp.callback_query_handler(text="start_using") 
async def get_information(call: CallbackQuery, state: FSM):
      is_syb = await check_sub(user_id=call.message.chat.id)
      if is_syb is True:
        markup = None
        msg = "üì∏*–°–µ–π—á–∞—Å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ.*\n\n__–§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á—ë—Ç–∫–∏–º, –≤ –∫–∞–¥—Ä–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å! –û–±—Ä–µ–∂—å —Ñ–æ—Ç–æ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π__"
        await FSM.getphotop.set()
      else:
       markup = await checksubscribe()
       msg = '‚ùå–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–±–æ—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª'
      await bot.send_message(call.message.chat.id, text=msg, reply_markup=markup, parse_mode='Markdown')


@dp.callback_query_handler(text="how_using")
async def using_tutor_doc(call: CallbackQuery):
   await call.bot.send_document(chat_id=call.message.chat.id, document=open("–ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞.docx", "rb"))


@dp.callback_query_handler(text="check_subscribe")
async def check_s(call: CallbackQuery):
     is_syb = await check_sub(user_id=call.message.chat.id)

     if is_syb is True:
       markup = None
       msg = f"‚úÖ*–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!*\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, –Ω–∞–∂–∞–≤ /start –∏–ª–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–µ—à–∏—Ç—å'"

     else:
       markup = await checksubscribe()
       msg = '‚ùå*–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–±–æ—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª*'
     await bot.send_message(call.message.chat.id, text=msg, reply_markup=markup, parse_mode='Markdown')


@dp.callback_query_handler(text="rassilka")
async def make_rassilka(call: CallbackQuery, state: FSM):
   await  FSM.rassil.set()
   await bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')


@dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥")
async def back_to_menu(message: Message):
   if message.text == '–ù–∞–∑–∞–¥':
      markup = await Start_keyboard(user_id=message.from_user.id)
      msg = '*–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\nüü©–í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è:'
      await bot.send_message(message.chat.id, text=msg, reply_markup=markup, parse_mode='Markdown')


